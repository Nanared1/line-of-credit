AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Handler: dist/handlers/index.handler
    Environment:
      Variables:
        MONGODB_URI:
          Ref: MongoDBUri
    MemorySize: 256
Parameters:
  MongoDBUri:
    Type: String
    Description: MongoDB connection URI
    NoEcho: true
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: '''GET,POST,PUT,DELETE,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateUserFunction
      Handler: dist/handlers/users.createUser
      Events:
        CreateUser:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /users
            Method: POST
    Metadata:
      SamResourceId: CreateUserFunction
  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetUserFunction
      Handler: dist/handlers/users.getUser
      Events:
        GetUser:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /users/{userId}
            Method: GET
    Metadata:
      SamResourceId: GetUserFunction
  UpdateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UpdateUserFunction
      Handler: dist/handlers/users.updateUser
      Events:
        UpdateUser:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /users/{userId}
            Method: PUT
    Metadata:
      SamResourceId: UpdateUserFunction
  CreateApplicationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateApplicationFunction
      Handler: dist/handlers/applications.createApplication
      Events:
        CreateApplication:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /applications
            Method: POST
    Metadata:
      SamResourceId: CreateApplicationFunction
  DisburseFundsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DisburseFundsFunction
      Handler: dist/handlers/applications.disburseFunds
      Events:
        DisburseFunds:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /applications/disburse
            Method: POST
    Metadata:
      SamResourceId: DisburseFundsFunction
  RepayFundsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: RepayFundsFunction
      Handler: dist/handlers/applications.repayFunds
      Events:
        RepayFunds:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /applications/repay
            Method: POST
    Metadata:
      SamResourceId: RepayFundsFunction
  RejectApplicationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: RejectApplicationFunction
      Handler: dist/handlers/applications.rejectApplication
      Events:
        RejectApplication:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /applications/reject
            Method: POST
    Metadata:
      SamResourceId: RejectApplicationFunction
  GetUserApplicationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetUserApplicationsFunction
      Handler: dist/handlers/applications.getUserApplications
      Events:
        GetUserApplications:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /users/{userId}/applications
            Method: GET
    Metadata:
      SamResourceId: GetUserApplicationsFunction
Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/prod
