AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Handler: dist/handlers/index.handler
    Environment:
      Variables:
        MONGODB_URI: !Ref MongoDBUri
    MemorySize: 1024

Parameters:
  MongoDBUri:
    Type: String
    Description: MongoDB connection URI
    NoEcho: true

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Admin-Token'"
        AllowOrigin: "'*'"
        MaxAge: "'300'"
        AllowCredentials: true

  # User endpoints
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/users.createUser
      Events:
        CreateUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users
            Method: POST

  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/users.getUser
      Events:
        GetUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users/{userId}
            Method: GET

  UpdateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/users.updateUser
      Events:
        UpdateUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users/{userId}
            Method: PUT

  # Application endpoints
  CreateApplicationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/applications.createApplication
      Events:
        CreateApplication:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /applications
            Method: POST

  DisburseFundsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/applications.disburseFunds
      Events:
        DisburseFunds:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /applications/disburse
            Method: POST

  RepayFundsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/applications.repayFunds
      Events:
        RepayFunds:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /applications/repay
            Method: POST

  RejectApplicationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/applications.rejectApplication
      Events:
        RejectApplication:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /applications/reject
            Method: POST

  GetUserApplicationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/applications.getUserApplications
      Events:
        GetUserApplications:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users/{userId}/applications
            Method: GET

  GetAllClientApplicationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/applications.getAllClientApplications
      Events:
        GetAllClientApplications:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /applications
            Method: GET
  
  GetApplicationTransactionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/applications.getApplicationTransactions
      Events:
        GetApplicationTransactions:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /applications/{applicationId}/transactions
            Method: GET

  GetAllUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: dist/handlers/users.getAllUsers
      Events:
        GetAllUsers:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users
            Method: GET

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
